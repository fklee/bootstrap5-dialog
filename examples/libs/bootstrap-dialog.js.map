{"version":3,"sources":["bootstrap-dialog.js"],"names":["root","factory","module","exports","require","define","amd","$","BootstrapDialog","jQuery","this","window","BootstrapDialogModal","element","options","test","fn","modal","Constructor","VERSION","Modal","call","getModalVersion","ORIGINAL_BODY_PADDING","parseInt","css","METHODS_TO_OVERRIDE","hide","e","preventDefault","Event","$element","trigger","isShown","isDefaultPrevented","getGlobalOpenedDialogs","length","$body","removeClass","resetScrollbar","escape","document","off","attr","support","transition","hasClass","one","proxy","hideModal","emulateTransitionEnd","setScrollbar","bodyPad","bodyIsOverflowing","scrollbarWidth","backdrop","resetAdjustments","extend","prototype","constructor","openedDialogs","each","dialogs","id","dialogInstance","isRealized","isOpened","push","defaultOptions","newGuid","buttons","data","onshow","onshown","onhide","onhidden","indexedButtons","registeredButtonHotkeys","draggableData","isMouseDown","mouseOffset","realized","opened","initOptions","holdThisInstance","NAMESPACE","TYPE_DEFAULT","TYPE_INFO","TYPE_PRIMARY","TYPE_SECONDARY","TYPE_SUCCESS","TYPE_WARNING","TYPE_DANGER","TYPE_DARK","TYPE_LIGHT","DEFAULT_TEXTS","SIZE_NORMAL","SIZE_SMALL","SIZE_WIDE","SIZE_EXTRAWIDE","SIZE_LARGE","BUTTON_SIZES","ICON_SPINNER","BUTTONS_ORDER_CANCEL_OK","BUTTONS_ORDER_OK_CANCEL","Z_INDEX_BACKDROP","Z_INDEX_MODAL","type","size","cssClass","title","message","nl2br","closable","closeByBackdrop","closeByKeyboard","closeIcon","spinicon","autodestroy","draggable","animate","description","tabindex","btnsOrder","configDefaultOptions","openAll","open","closeAll","close","getDialog","dialog","setDialog","getId","addDialog","moveFocus","lastDialogInstance","getModal","focus","updateZIndex","zIndexBackdrop","zIndexModal","dialogCount","dialogId","$modal","$backdrop","getModalBackdrop","realize","_backdrop","getModalForBootstrapDialogModal","get","initModalStuff","setModal","createModal","setModalDialog","createModalDialog","setModalContent","createModalContent","setModalHeader","createModalHeader","setModalBody","createModalBody","setModalFooter","createModalFooter","append","getModalDialog","getModalContent","getModalHeader","getModalBody","getModalFooter","prop","$modalDialog","$modalContent","$modalHeader","$modalBody","$modalFooter","createDynamicContent","rawContent","content","formatStringContent","replace","setData","key","value","getData","setId","getType","setType","updateType","types","join","addClass","getSize","setSize","updateSize","index","button","$button","getButton","buttonSizes","sizeClassSpecified","btnClasses","split","btnClass","inArray","getButtonSize","getCssClass","setCssClass","getTitle","setTitle","updateTitle","getDefaultText","find","getNamespace","html","getMessage","setMessage","updateMessage","isClosable","setClosable","updateClosable","setCloseByBackdrop","canCloseByBackdrop","setCloseByKeyboard","canCloseByKeyboard","isAnimate","setAnimate","updateAnimate","toggleClass","getSpinicon","setSpinicon","addButton","addButtons","that","getButtons","setButtons","updateButtons","show","closest","createFooterButtons","isAutodestroy","setAutodestroy","getDescription","setDescription","setTabindex","getTabindex","updateTabindex","name","createHeaderContent","$container","createTitleContent","$title","createCloseButton","on","event","createBodyContent","createMessageContent","$message","createFooterContent","createButton","icon","trim","createButtonIcon","label","hotkey","autospin","toggleSpin","action","enhanceButton","enabled","toggleEnable","enable","disable","spin","$icon","prepend","remove","stopSpin","enableButtons","toggle","onShow","onShown","onHide","onHidden","setRealized","setOpened","handleModalEvents","isModalEvent","openIt","hideIt","which","is","namespace","makeModalDraggable","dialogOffset","offset","top","clientY","left","clientX","keyboard","c","r","Math","random","toString","alert","alertOptions","defaultAlertOptions","buttonLabel","OK","buttonHotkey","callback","arguments","bind","confirm","confirmOptions","defaultConfirmOptions","btnCancelLabel","CANCEL","btnCancelClass","btnCancelHotkey","btnOKLabel","btnOKClass","btnOKHotkey","reverse","warning","danger","success"],"mappings":"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","file":"bootstrap-dialog.js","sourcesContent":["/* global define */\n\n/* ================================================\n * Make use of Bootstrap's modal more monkey-friendly.\n *\n * For Bootstrap 3.\n *\n * javanoob@hotmail.com\n *\n * https://github.com/nakupanda/bootstrap3-dialog\n *\n * Licensed under The MIT License.\n * ================================================ */\n(function (root, factory) {\n\n    \"use strict\";\n\n    // CommonJS module is defined\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = factory(require('jquery'), require('bootstrap'));\n    }\n    // AMD module is defined\n    else if (typeof define === \"function\" && define.amd) {\n        define(\"bootstrap-dialog\", [\"jquery\", \"bootstrap\"], function ($) {\n            return factory($);\n        });\n    } else {\n        // planted over the root!\n        root.BootstrapDialog = factory(root.jQuery);\n    }\n\n}(this ? this : window, function ($) {\n\n    \"use strict\";\n\n    /* ================================================\n     * Definition of BootstrapDialogModal.\n     * Extend Bootstrap Modal and override some functions.\n     * BootstrapDialogModal === Modified Modal.\n     * ================================================ */\n    var Modal = $.fn.modal.Constructor;\n    var BootstrapDialogModal = function (element, options) {\n        if (/4\\.1\\.\\d+/.test($.fn.modal.Constructor.VERSION)) { //FIXME for BootstrapV4\n            return new Modal(element, options);\n        } else if (/5\\.\\d\\.\\d+/.test($.fn.modal.Constructor.VERSION)) { //FIXME for BootstrapV4\n            return new Modal(element, options);\n        } else {\n            Modal.call(this, element, options);\n        }\n    };\n    BootstrapDialogModal.getModalVersion = function () {\n        var version = null;\n        if (typeof $.fn.modal.Constructor.VERSION === 'undefined') {\n            version = 'v3.1';\n        } else if (/3\\.2\\.\\d+/.test($.fn.modal.Constructor.VERSION)) {\n            version = 'v3.2';\n        } else if (/3\\.3\\.[1,2]/.test($.fn.modal.Constructor.VERSION)) {\n            version = 'v3.3';  // v3.3.1, v3.3.2\n        } else if (/4\\.\\d\\.\\d+/.test($.fn.modal.Constructor.VERSION)) { //FIXME for BootstrapV4\n            version = 'v4.1';\n        } else if (/5\\.\\d\\.\\d+/.test($.fn.modal.Constructor.VERSION)) { //FIXME for BootstrapV5\n            version = 'v4.1';\n        } else {\n            version = 'v3.3.4';\n        }\n\n        return version;\n    };\n    BootstrapDialogModal.ORIGINAL_BODY_PADDING = parseInt(($('body').css('padding-right') || 0), 10);\n    BootstrapDialogModal.METHODS_TO_OVERRIDE = {};\n    BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.1'] = {};\n    BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.2'] = {\n        hide: function (e) {\n            if (e) {\n                e.preventDefault();\n            }\n            e = $.Event('hide.bs.modal');\n\n            this.$element.trigger(e);\n\n            if (!this.isShown || e.isDefaultPrevented()) {\n                return;\n            }\n\n            this.isShown = false;\n\n            // Remove css class 'modal-open' when the last opened dialog is closing.\n            var openedDialogs = this.getGlobalOpenedDialogs();\n            if (openedDialogs.length === 0) {\n                this.$body.removeClass('modal-open');\n            }\n\n            this.resetScrollbar();\n            this.escape();\n\n            $(document).off('focusin.bs.modal');\n\n            this.$element\n                .removeClass('in')\n                .attr('aria-hidden', true)\n                .off('click.dismiss.bs.modal');\n\n            $.support.transition && this.$element.hasClass('fade') ?\n                this.$element\n                    .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n                    .emulateTransitionEnd(300) :\n                this.hideModal();\n        }\n    };\n    BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.3'] = {\n        /**\n         * Overrided.\n         *\n         * @returns {undefined}\n         */\n        setScrollbar: function () {\n            var bodyPad = BootstrapDialogModal.ORIGINAL_BODY_PADDING;\n            if (this.bodyIsOverflowing) {\n                this.$body.css('padding-right', bodyPad + this.scrollbarWidth);\n            }\n        },\n        /**\n         * Overrided.\n         *\n         * @returns {undefined}\n         */\n        resetScrollbar: function () {\n            var openedDialogs = this.getGlobalOpenedDialogs();\n            if (openedDialogs.length === 0) {\n                this.$body.css('padding-right', BootstrapDialogModal.ORIGINAL_BODY_PADDING);\n            }\n        },\n        /**\n         * Overrided.\n         *\n         * @returns {undefined}\n         */\n        hideModal: function () {\n            this.$element.hide();\n            this.backdrop($.proxy(function () {\n                var openedDialogs = this.getGlobalOpenedDialogs();\n                if (openedDialogs.length === 0) {\n                    this.$body.removeClass('modal-open');\n                }\n                this.resetAdjustments();\n                this.resetScrollbar();\n                this.$element.trigger('hidden.bs.modal');\n            }, this));\n        }\n    };\n    BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.3.4'] = $.extend({}, BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.3']);\n    BootstrapDialogModal.METHODS_TO_OVERRIDE['v4.1'] = $.extend({}, BootstrapDialogModal.METHODS_TO_OVERRIDE['v3.3']); //FIXME for BootstrapV4\n    BootstrapDialogModal.prototype = {\n        constructor: BootstrapDialogModal,\n        /**\n         * New function, to get the dialogs that opened by BootstrapDialog.\n         *\n         * @returns {undefined}\n         */\n        getGlobalOpenedDialogs: function () {\n            var openedDialogs = [];\n            $.each(BootstrapDialog.dialogs, function (id, dialogInstance) {\n                if (dialogInstance.isRealized() && dialogInstance.isOpened()) {\n                    openedDialogs.push(dialogInstance);\n                }\n            });\n\n            return openedDialogs;\n        }\n    };\n\n    // Add compatible methods.\n    BootstrapDialogModal.prototype = $.extend(BootstrapDialogModal.prototype, Modal.prototype, BootstrapDialogModal.METHODS_TO_OVERRIDE[BootstrapDialogModal.getModalVersion()]);\n\n    /* ================================================\n     * Definition of BootstrapDialog.\n     * ================================================ */\n    var BootstrapDialog = function (options) {\n        this.defaultOptions = $.extend(true, {\n            id: BootstrapDialog.newGuid(),\n            buttons: [],\n            data: {},\n            onshow: null,\n            onshown: null,\n            onhide: null,\n            onhidden: null\n        }, BootstrapDialog.defaultOptions);\n        this.indexedButtons = {};\n        this.registeredButtonHotkeys = {};\n        this.draggableData = {\n            isMouseDown: false,\n            mouseOffset: {}\n        };\n        this.realized = false;\n        this.opened = false;\n        this.initOptions(options);\n        this.holdThisInstance();\n    };\n\n    BootstrapDialog.BootstrapDialogModal = BootstrapDialogModal;\n\n    /**\n     *  Some constants.\n     */\n    BootstrapDialog.NAMESPACE = 'bootstrap-dialog';\n    BootstrapDialog.TYPE_DEFAULT = 'bg-info';\n    BootstrapDialog.TYPE_INFO = 'bg-info';\n    BootstrapDialog.TYPE_PRIMARY = 'bg-primary';\n    BootstrapDialog.TYPE_SECONDARY = 'bg-secondary';\n    BootstrapDialog.TYPE_SUCCESS = 'bg-success';\n    BootstrapDialog.TYPE_WARNING = 'bg-warning';\n    BootstrapDialog.TYPE_DANGER = 'bg-danger';\n    BootstrapDialog.TYPE_DARK = 'bg-dark';\n    BootstrapDialog.TYPE_LIGHT = 'bg-light';\n    BootstrapDialog.DEFAULT_TEXTS = {};\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_DEFAULT] = 'Default';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_INFO] = 'Information';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_PRIMARY] = 'Primary';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_SECONDARY] = 'Secondary';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_SUCCESS] = 'Success';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_WARNING] = 'Warning';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_DANGER] = 'Danger';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_DARK] = 'Dark';\n    BootstrapDialog.DEFAULT_TEXTS[BootstrapDialog.TYPE_LIGHT] = 'Light';\n    BootstrapDialog.DEFAULT_TEXTS['OK'] = 'OK';\n    BootstrapDialog.DEFAULT_TEXTS['CANCEL'] = 'Cancel';\n    BootstrapDialog.DEFAULT_TEXTS['CONFIRM'] = 'Confirmation';\n    BootstrapDialog.SIZE_NORMAL = '';\n    BootstrapDialog.SIZE_SMALL = 'modal-sm';\n    BootstrapDialog.SIZE_WIDE = 'modal-lg';    // size-wide is equal to modal-lg\n    BootstrapDialog.SIZE_EXTRAWIDE = 'modal-lg';    // size-wide is equal to modal-lg\n    BootstrapDialog.SIZE_LARGE = 'modal-xl';\n    BootstrapDialog.BUTTON_SIZES = {};\n    BootstrapDialog.BUTTON_SIZES[BootstrapDialog.SIZE_NORMAL] = '';\n    BootstrapDialog.BUTTON_SIZES[BootstrapDialog.SIZE_SMALL] = 'btn-small';\n    BootstrapDialog.BUTTON_SIZES[BootstrapDialog.SIZE_WIDE] = 'btn-block';\n    BootstrapDialog.BUTTON_SIZES[BootstrapDialog.SIZE_LARGE] = 'btn-lg';\n    BootstrapDialog.ICON_SPINNER = 'glyphicon glyphicon-asterisk';\n    BootstrapDialog.BUTTONS_ORDER_CANCEL_OK = 'btns-order-cancel-ok';\n    BootstrapDialog.BUTTONS_ORDER_OK_CANCEL = 'btns-order-ok-cancel';\n    BootstrapDialog.Z_INDEX_BACKDROP = 1040;\n    BootstrapDialog.Z_INDEX_MODAL = 1050;\n\n    /**\n     * Default options.\n     */\n    BootstrapDialog.defaultOptions = {\n        type: BootstrapDialog.TYPE_PRIMARY,\n        size: BootstrapDialog.SIZE_NORMAL,\n        cssClass: '',\n        title: null,\n        message: null,\n        nl2br: true,\n        closable: true,\n        closeByBackdrop: true,\n        closeByKeyboard: true,\n        closeIcon: '&#215;',\n        spinicon: BootstrapDialog.ICON_SPINNER,\n        autodestroy: true,\n        draggable: false,\n        animate: true,\n        description: '',\n        tabindex: -1,\n        btnsOrder: BootstrapDialog.BUTTONS_ORDER_CANCEL_OK\n    };\n\n    /**\n     * Config default options.\n     */\n    BootstrapDialog.configDefaultOptions = function (options) {\n        BootstrapDialog.defaultOptions = $.extend(true, BootstrapDialog.defaultOptions, options);\n    };\n\n    /**\n     * Open / Close all created dialogs all at once.\n     */\n    BootstrapDialog.dialogs = {};\n    BootstrapDialog.openAll = function () {\n        $.each(BootstrapDialog.dialogs, function (id, dialogInstance) {\n            dialogInstance.open();\n        });\n    };\n    BootstrapDialog.closeAll = function () {\n        $.each(BootstrapDialog.dialogs, function (id, dialogInstance) {\n            dialogInstance.close();\n        });\n    };\n\n    /**\n     * Get dialog instance by given id.\n     *\n     * @returns dialog instance\n     */\n    BootstrapDialog.getDialog = function (id) {\n        var dialog = null;\n        if (typeof BootstrapDialog.dialogs[id] !== 'undefined') {\n            dialog = BootstrapDialog.dialogs[id];\n        }\n\n        return dialog;\n    };\n\n    /**\n     * Set a dialog.\n     *\n     * @returns the dialog that has just been set.\n     */\n    BootstrapDialog.setDialog = function (dialog) {\n        BootstrapDialog.dialogs[dialog.getId()] = dialog;\n\n        return dialog;\n    };\n\n    /**\n     * Alias of BootstrapDialog.setDialog(dialog)\n     *\n     * @param {type} dialog\n     * @returns {unresolved}\n     */\n    BootstrapDialog.addDialog = function (dialog) {\n        return BootstrapDialog.setDialog(dialog);\n    };\n\n    /**\n     * Move focus to next visible dialog.\n     */\n    BootstrapDialog.moveFocus = function () {\n        var lastDialogInstance = null;\n        $.each(BootstrapDialog.dialogs, function (id, dialogInstance) {\n            if (dialogInstance.isRealized() && dialogInstance.isOpened()) {\n                lastDialogInstance = dialogInstance;\n            }\n        });\n        if (lastDialogInstance !== null) {\n            lastDialogInstance.getModal().focus();\n        }\n    };\n\n    BootstrapDialog.METHODS_TO_OVERRIDE = {};\n    BootstrapDialog.METHODS_TO_OVERRIDE['v3.1'] = {\n        /**\n         * To make multiple opened dialogs look better.\n         *\n         * Will be removed in later version, after Bootstrap Modal >= 3.3.0, updating z-index is unnecessary.\n         */\n        updateZIndex: function () {\n            if (this.isOpened()) {\n                var zIndexBackdrop = BootstrapDialog.Z_INDEX_BACKDROP;\n                var zIndexModal = BootstrapDialog.Z_INDEX_MODAL;\n                var dialogCount = 0;\n                $.each(BootstrapDialog.dialogs, function (dialogId, dialogInstance) {\n                    if (dialogInstance.isRealized() && dialogInstance.isOpened()) {\n                        dialogCount++;\n                    }\n                });\n                var $modal = this.getModal();\n                var $backdrop = this.getModalBackdrop($modal); //FIXME for BootstrapV4\n                $modal.css('z-index', zIndexModal + (dialogCount - 1) * 20);\n                $backdrop.css('z-index', zIndexBackdrop + (dialogCount - 1) * 20);\n            }\n\n            return this;\n        },\n        open: function () {\n            !this.isRealized() && this.realize();\n            this.getModal().modal('show');\n            this.updateZIndex();\n\n            return this;\n        }\n    };\n    BootstrapDialog.METHODS_TO_OVERRIDE['v3.2'] = {\n        updateZIndex: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['updateZIndex'],\n        open: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['open']\n    };\n    BootstrapDialog.METHODS_TO_OVERRIDE['v3.3'] = {};\n    BootstrapDialog.METHODS_TO_OVERRIDE['v3.3.4'] = $.extend({}, BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']);\n    BootstrapDialog.METHODS_TO_OVERRIDE['v4.0'] = { //FIXME for BootstrapV4\n        getModalBackdrop: function ($modal) {\n            return $($modal.data('bs.modal')._backdrop);\n        },\n        updateZIndex: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['updateZIndex'],\n        open: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['open'],\n        getModalForBootstrapDialogModal: function () {\n            return this.getModal().get(0);\n        }\n    };\n    BootstrapDialog.METHODS_TO_OVERRIDE['v4.1'] = { //FIXME for BootstrapV4\n        getModalBackdrop: function ($modal) {\n            return $($modal.data('bs.modal')._backdrop);\n        },\n        updateZIndex: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['updateZIndex'],\n        open: BootstrapDialog.METHODS_TO_OVERRIDE['v3.1']['open'],\n        getModalForBootstrapDialogModal: function () {\n            return this.getModal().get(0);\n        }\n    };\n    BootstrapDialog.prototype = {\n        constructor: BootstrapDialog,\n        initOptions: function (options) {\n            this.options = $.extend(true, this.defaultOptions, options);\n\n            return this;\n        },\n        holdThisInstance: function () {\n            BootstrapDialog.addDialog(this);\n\n            return this;\n        },\n        initModalStuff: function () {\n\n\n            this.setModal(this.createModal())\n                .setModalDialog(this.createModalDialog())\n                .setModalContent(this.createModalContent())\n                .setModalHeader(this.createModalHeader())\n                .setModalBody(this.createModalBody())\n                .setModalFooter(this.createModalFooter());\n\n            this.getModal().append(this.getModalDialog());\n            this.getModalDialog().append(this.getModalContent());\n            this.getModalContent()\n                .append(this.getModalHeader())\n                .append(this.getModalBody())\n                .append(this.getModalFooter());\n\n\n\n            return this;\n        },\n        createModal: function () {\n            var $modal = $('<div class=\"modal\" role=\"dialog\" aria-hidden=\"true\"></div>');\n            $modal.prop('id', this.getId());\n            $modal.attr('aria-labelledby', this.getId() + '_title');\n\n            return $modal;\n        },\n        getModal: function () {\n            return this.$modal;\n        },\n        setModal: function ($modal) {\n            this.$modal = $modal;\n\n            return this;\n        },\n        getModalBackdrop: function ($modal) { //FIXME for BootstrapV4\n            return $modal.data('bs.modal').$backdrop;\n        },\n        getModalForBootstrapDialogModal: function () { //FIXME for BootstrapV4\n            return this.getModal();\n        },\n        createModalDialog: function () {\n            return $('<div class=\"modal-dialog\"></div>');\n        },\n        getModalDialog: function () {\n            return this.$modalDialog;\n        },\n        setModalDialog: function ($modalDialog) {\n            this.$modalDialog = $modalDialog;\n\n            return this;\n        },\n        createModalContent: function () {\n            return $('<div class=\"modal-content\"></div>');\n        },\n        getModalContent: function () {\n            return this.$modalContent;\n        },\n        setModalContent: function ($modalContent) {\n            this.$modalContent = $modalContent;\n\n            return this;\n        },\n        createModalHeader: function () {\n            return $('<div class=\"modal-header\"></div>');\n        },\n        getModalHeader: function () {\n            return this.$modalHeader;\n        },\n        setModalHeader: function ($modalHeader) {\n            this.$modalHeader = $modalHeader;\n\n            return this;\n        },\n        createModalBody: function () {\n            return $('<div class=\"modal-body\"></div>');\n        },\n        getModalBody: function () {\n            return this.$modalBody;\n        },\n        setModalBody: function ($modalBody) {\n            this.$modalBody = $modalBody;\n\n            return this;\n        },\n        createModalFooter: function () {\n            return $('<div class=\"modal-footer\"></div>');\n        },\n        getModalFooter: function () {\n            return this.$modalFooter;\n        },\n        setModalFooter: function ($modalFooter) {\n            this.$modalFooter = $modalFooter;\n\n            return this;\n        },\n        createDynamicContent: function (rawContent) {\n            var content = null;\n            if (typeof rawContent === 'function') {\n                content = rawContent.call(rawContent, this);\n            } else {\n                content = rawContent;\n            }\n            if (typeof content === 'string') {\n                content = this.formatStringContent(content);\n            }\n\n            return content;\n        },\n        formatStringContent: function (content) {\n            if (this.options.nl2br) {\n                return content.replace(/\\r\\n/g, '<br />').replace(/[\\r\\n]/g, '<br />');\n            }\n\n            return content;\n        },\n        setData: function (key, value) {\n            this.options.data[key] = value;\n\n            return this;\n        },\n        getData: function (key) {\n            return this.options.data[key];\n        },\n        setId: function (id) {\n            this.options.id = id;\n\n            return this;\n        },\n        getId: function () {\n            return this.options.id;\n        },\n        getType: function () {\n            return this.options.type;\n        },\n        setType: function (type) {\n            this.options.type = type;\n            this.updateType();\n\n            return this;\n        },\n        updateType: function () {\n            if (this.isRealized()) {\n                var types = [BootstrapDialog.TYPE_DEFAULT,\n                BootstrapDialog.TYPE_INFO,\n                BootstrapDialog.TYPE_PRIMARY,\n                BootstrapDialog.TYPE_SECONDARY,\n                BootstrapDialog.TYPE_SUCCESS,\n                BootstrapDialog.TYPE_WARNING,\n                BootstrapDialog.TYPE_DARK,\n                BootstrapDialog.TYPE_LIGHT,\n                BootstrapDialog.TYPE_DANGER];\n\n                this.getModalHeader().removeClass(types.join(' ')).addClass(this.getType());\n            }\n\n            return this;\n        },\n        getSize: function () {\n            return this.options.size;\n        },\n        setSize: function (size) {\n            this.options.size = size;\n            this.updateSize();\n\n            return this;\n        },\n        updateSize: function () {\n            if (this.isRealized()) {\n                var dialog = this;\n\n                // Dialog size\n                this.getModal().removeClass(BootstrapDialog.SIZE_NORMAL)\n                    .removeClass(BootstrapDialog.SIZE_SMALL)\n                    .removeClass(BootstrapDialog.SIZE_WIDE)\n                    .removeClass(BootstrapDialog.SIZE_EXTRAWIDE)\n                    .removeClass(BootstrapDialog.SIZE_LARGE);\n                this.getModalDialog().addClass(this.getSize());\n\n                /*\n                // Smaller dialog.\n                this.getModalDialog().removeClass('modal-sm');\n                if (this.getSize() === BootstrapDialog.SIZE_SMALL) {\n                    this.getModalDialog().addClass('modal-sm');\n                }\n\n                // Wider dialog.\n                this.getModalDialog().removeClass('modal-lg');\n                if (this.getSize() === BootstrapDialog.SIZE_WIDE) {\n                    this.getModalDialog().addClass('modal-lg');\n                }\n                // Extra Wide Dialog.\n                this.getModalDialog().removeClass('modal-xl');\n                if (this.getSize() === BootstrapDialog.SIZE_EXTRAWIDE) {\n                    this.getModalDialog().addClass('modal-xl');\n                }\n                */\n                // Button size\n                $.each(this.options.buttons, function (index, button) {\n                    var $button = dialog.getButton(button.id);\n                    var buttonSizes = ['btn-lg', 'btn-sm', 'btn-xs'];\n                    var sizeClassSpecified = false;\n                    if (typeof button['cssClass'] === 'string') {\n                        var btnClasses = button['cssClass'].split(' ');\n                        $.each(btnClasses, function (index, btnClass) {\n                            if ($.inArray(btnClass, buttonSizes) !== -1) {\n                                sizeClassSpecified = true;\n                            }\n                        });\n                    }\n                    if (!sizeClassSpecified) {\n                        $button.removeClass(buttonSizes.join(' '));\n                        $button.addClass(dialog.getButtonSize());\n                    }\n                });\n            }\n\n            return this;\n        },\n        getCssClass: function () {\n            return this.options.cssClass;\n        },\n        setCssClass: function (cssClass) {\n            this.options.cssClass = cssClass;\n\n            return this;\n        },\n        getTitle: function () {\n            return this.options.title;\n        },\n        setTitle: function (title) {\n            this.options.title = title;\n            this.updateTitle();\n\n            return this;\n        },\n        updateTitle: function () {\n            if (this.isRealized()) {\n                var title = this.getTitle() !== null ? this.createDynamicContent(this.getTitle()) : this.getDefaultText();\n                this.getModalHeader().find('.' + this.getNamespace('title')).html('').append(title).prop('id', this.getId() + '_title');\n            }\n\n            return this;\n        },\n        getMessage: function () {\n            return this.options.message;\n        },\n        setMessage: function (message) {\n            this.options.message = message;\n            this.updateMessage();\n\n            return this;\n        },\n        updateMessage: function () {\n            if (this.isRealized()) {\n                var message = this.createDynamicContent(this.getMessage());\n                this.getModalBody().find('.' + this.getNamespace('message')).html('').append(message);\n            }\n\n            return this;\n        },\n        isClosable: function () {\n            return this.options.closable;\n        },\n        setClosable: function (closable) {\n            this.options.closable = closable;\n            this.updateClosable();\n\n            return this;\n        },\n        setCloseByBackdrop: function (closeByBackdrop) {\n            this.options.closeByBackdrop = closeByBackdrop;\n\n            return this;\n        },\n        canCloseByBackdrop: function () {\n            return this.options.closeByBackdrop;\n        },\n        setCloseByKeyboard: function (closeByKeyboard) {\n            this.options.closeByKeyboard = closeByKeyboard;\n\n            return this;\n        },\n        canCloseByKeyboard: function () {\n            return this.options.closeByKeyboard;\n        },\n        isAnimate: function () {\n            return this.options.animate;\n        },\n        setAnimate: function (animate) {\n            this.options.animate = animate;\n\n            return this;\n        },\n        updateAnimate: function () {\n            if (this.isRealized()) {\n                this.getModal().toggleClass('fade', this.isAnimate());\n            }\n\n            return this;\n        },\n        getSpinicon: function () {\n            return this.options.spinicon;\n        },\n        setSpinicon: function (spinicon) {\n            this.options.spinicon = spinicon;\n\n            return this;\n        },\n        addButton: function (button) {\n            this.options.buttons.push(button);\n\n            return this;\n        },\n        addButtons: function (buttons) {\n            var that = this;\n            $.each(buttons, function (index, button) {\n                that.addButton(button);\n            });\n\n            return this;\n        },\n        getButtons: function () {\n            return this.options.buttons;\n        },\n        setButtons: function (buttons) {\n            this.options.buttons = buttons;\n            this.updateButtons();\n\n            return this;\n        },\n        /**\n         * If there is id provided for a button option, it will be in dialog.indexedButtons list.\n         *\n         * In that case you can use dialog.getButton(id) to find the button.\n         *\n         * @param {type} id\n         * @returns {undefined}\n         */\n        getButton: function (id) {\n            if (typeof this.indexedButtons[id] !== 'undefined') {\n                return this.indexedButtons[id];\n            }\n\n            return null;\n        },\n        getButtonSize: function () {\n            if (typeof BootstrapDialog.BUTTON_SIZES[this.getSize()] !== 'undefined') {\n                return BootstrapDialog.BUTTON_SIZES[this.getSize()];\n            }\n\n            return '';\n        },\n        updateButtons: function () {\n            if (this.isRealized()) {\n                if (this.getButtons().length === 0) {\n                    this.getModalFooter().hide();\n                } else {\n                    this.getModalFooter().show().closest('.modal-footer').append(this.createFooterButtons());\n                }\n            }\n\n            return this;\n        },\n        isAutodestroy: function () {\n            return this.options.autodestroy;\n        },\n        setAutodestroy: function (autodestroy) {\n            this.options.autodestroy = autodestroy;\n        },\n        getDescription: function () {\n            return this.options.description;\n        },\n        setDescription: function (description) {\n            this.options.description = description;\n\n            return this;\n        },\n        setTabindex: function (tabindex) {\n            this.options.tabindex = tabindex;\n\n            return this;\n        },\n        getTabindex: function () {\n            return this.options.tabindex;\n        },\n        updateTabindex: function () {\n            if (this.isRealized()) {\n                this.getModal().attr('tabindex', this.getTabindex());\n            }\n\n            return this;\n        },\n        getDefaultText: function () {\n            return BootstrapDialog.DEFAULT_TEXTS[this.getType()];\n        },\n        getNamespace: function (name) {\n            return BootstrapDialog.NAMESPACE + '-' + name;\n        },\n        createHeaderContent: function () {\n            //var $container = $('<div></div>');\n            //$container.addClass(this.getNamespace('header'));\n\n            // title\n            //$container.append(this.createTitleContent());\n\n            // Close button\n            //$container.append(this.createCloseButton());\n\n            return $container;\n        },\n        createTitleContent: function () {\n            var $title = $('<h5></h5>');\n            $title.addClass('modal-title');\n            $title.addClass(this.getNamespace('title'));\n\n            return $title;\n        },\n        createCloseButton: function () {\n            //var $container = $('<div></div>');\n            //$container.addClass(this.getNamespace('close-button'));\n            var $button = $('<button type=\"button\" class=\"btn-close\" data-dismiss=\"modal\" aria-label=\"close\"></button>');\n            $button.addClass(this.getNamespace('close-button'));\n            /*\n            $icon.append(this.options.closeIcon);\n             */\n            //$icon.append($icon);\n            $button.on('click', { dialog: this }, function (event) {\n                event.data.dialog.close();\n            });\n\n            return $button;\n        },\n        createBodyContent: function () {\n            var $container = $('<div></div>');\n            $container.addClass(this.getNamespace('body'));\n\n            // Message\n            $container.append(this.createMessageContent());\n\n            return $container;\n        },\n        createMessageContent: function () {\n            var $message = $('<div></div>');\n            $message.addClass(this.getNamespace('message'));\n\n            return $message;\n        },\n        createFooterContent: function () {\n            var $container = $('<div></div>');\n            $container.addClass(this.getNamespace('footer'));\n\n            return $container;\n        },\n        createFooterButtons: function () {\n            var that = this;\n\n            var $container = that.$modalFooter;// $('<div></div>');\n            //$container.addClass(this.getNamespace('footer-buttons'));\n\n\n            this.indexedButtons = {};\n            $.each(this.options.buttons, function (index, button) {\n                if (!button.id) {\n                    button.id = BootstrapDialog.newGuid();\n                }\n                var $button = that.createButton(button);\n                that.indexedButtons[button.id] = $button;\n                $container.append($button);\n            });\n\n            return $container;\n        },\n        createButton: function (button) {\n            var $button = $('<button class=\"btn\"></button>');\n            $button.prop('id', button.id);\n            $button.data('button', button);\n\n            // Icon\n            if (typeof button.icon !== 'undefined' && $.trim(button.icon) !== '') {\n                $button.append(this.createButtonIcon(button.icon));\n            }\n\n            // Label\n            if (typeof button.label !== 'undefined') {\n                $button.append(button.label);\n            }\n\n            // title\n            if (typeof button.title !== 'undefined') {\n                $button.attr('title', button.title);\n            }\n\n            // Css class\n            if (typeof button.cssClass !== 'undefined' && $.trim(button.cssClass) !== '') {\n                $button.addClass(button.cssClass);\n            } else {\n                $button.addClass('btn-secondary');\n            }\n\n            // Data attributes\n            if (typeof button.data === 'object' && button.data.constructor === {}.constructor) {\n                $.each(button.data, function (key, value) {\n                    $button.attr('data-' + key, value);\n                });\n            }\n\n            // Hotkey\n            if (typeof button.hotkey !== 'undefined') {\n                this.registeredButtonHotkeys[button.hotkey] = $button;\n            }\n\n            // Button on click\n            $button.on('click', { dialog: this, $button: $button, button: button }, function (event) {\n                var dialog = event.data.dialog;\n                var $button = event.data.$button;\n                var button = $button.data('button');\n                if (button.autospin) {\n                    $button.toggleSpin(true);\n                }\n                if (typeof button.action === 'function') {\n                    return button.action.call($button, dialog, event);\n                }\n            });\n\n            // Dynamically add extra functions to $button\n            this.enhanceButton($button);\n\n            //Initialize enabled or not\n            if (typeof button.enabled !== 'undefined') {\n                $button.toggleEnable(button.enabled);\n            }\n\n            $button.addClass(\"bootstrap4-dialog-button\");\n\n            return $button;\n        },\n        /**\n         * Dynamically add extra functions to $button\n         *\n         * Using '$this' to reference 'this' is just for better readability.\n         *\n         * @param {type} $button\n         * @returns {_L13.BootstrapDialog.prototype}\n         */\n        enhanceButton: function ($button) {\n            $button.dialog = this;\n\n            // Enable / Disable\n            $button.toggleEnable = function (enable) {\n                var $this = this;\n                if (typeof enable !== 'undefined') {\n                    $this.prop(\"disabled\", !enable).toggleClass('disabled', !enable);\n                } else {\n                    $this.prop(\"disabled\", !$this.prop(\"disabled\"));\n                }\n\n                return $this;\n            };\n            $button.enable = function () {\n                var $this = this;\n                $this.toggleEnable(true);\n\n                return $this;\n            };\n            $button.disable = function () {\n                var $this = this;\n                $this.toggleEnable(false);\n\n                return $this;\n            };\n\n            // Icon spinning, helpful for indicating ajax loading status.\n            $button.toggleSpin = function (spin) {\n                var $this = this;\n                var dialog = $this.dialog;\n                var $icon = $this.find('.' + dialog.getNamespace('button-icon'));\n                if (typeof spin === 'undefined') {\n                    spin = !($button.find('.icon-spin').length > 0);\n                }\n                if (spin) {\n                    $icon.hide();\n                    $button.prepend(dialog.createButtonIcon(dialog.getSpinicon()).addClass('icon-spin'));\n                } else {\n                    $icon.show();\n                    $button.find('.icon-spin').remove();\n                }\n\n                return $this;\n            };\n            $button.spin = function () {\n                var $this = this;\n                $this.toggleSpin(true);\n\n                return $this;\n            };\n            $button.stopSpin = function () {\n                var $this = this;\n                $this.toggleSpin(false);\n\n                return $this;\n            };\n\n            return this;\n        },\n        createButtonIcon: function (icon) {\n            var $icon = $('<span></span>');\n            $icon.addClass(this.getNamespace('button-icon')).addClass(icon);\n\n            return $icon;\n        },\n        /**\n         * Invoke this only after the dialog is realized.\n         *\n         * @param {type} enable\n         * @returns {undefined}\n         */\n        enableButtons: function (enable) {\n            $.each(this.indexedButtons, function (id, $button) {\n                $button.toggleEnable(enable);\n            });\n\n            return this;\n        },\n        /**\n         * Invoke this only after the dialog is realized.\n         *\n         * @returns {undefined}\n         */\n        updateClosable: function () {\n            if (this.isRealized()) {\n                // Close button\n                this.getModalHeader().find('.' + this.getNamespace('close-button')).toggle(this.isClosable());\n            }\n\n            return this;\n        },\n        /**\n         * Set handler for modal event 'show.bs.modal'.\n         * This is a setter!\n         */\n        onShow: function (onshow) {\n            this.options.onshow = onshow;\n\n            return this;\n        },\n        /**\n         * Set handler for modal event 'shown.bs.modal'.\n         * This is a setter!\n         */\n        onShown: function (onshown) {\n            this.options.onshown = onshown;\n\n            return this;\n        },\n        /**\n         * Set handler for modal event 'hide.bs.modal'.\n         * This is a setter!\n         */\n        onHide: function (onhide) {\n            this.options.onhide = onhide;\n\n            return this;\n        },\n        /**\n         * Set handler for modal event 'hidden.bs.modal'.\n         * This is a setter!\n         */\n        onHidden: function (onhidden) {\n            this.options.onhidden = onhidden;\n\n            return this;\n        },\n        isRealized: function () {\n            return this.realized;\n        },\n        setRealized: function (realized) {\n            this.realized = realized;\n\n            return this;\n        },\n        isOpened: function () {\n            return this.opened;\n        },\n        setOpened: function (opened) {\n            this.opened = opened;\n\n            return this;\n        },\n        handleModalEvents: function () {\n            this.getModal().on('show.bs.modal', { dialog: this }, function (event) {\n                var dialog = event.data.dialog;\n                dialog.setOpened(true);\n                if (dialog.isModalEvent(event) && typeof dialog.options.onshow === 'function') {\n                    var openIt = dialog.options.onshow(dialog);\n                    if (openIt === false) {\n                        dialog.setOpened(false);\n                    }\n\n                    return openIt;\n                }\n            });\n            this.getModal().on('shown.bs.modal', { dialog: this }, function (event) {\n                var dialog = event.data.dialog;\n                dialog.isModalEvent(event) && typeof dialog.options.onshown === 'function' && dialog.options.onshown(dialog);\n            });\n            this.getModal().on('hide.bs.modal', { dialog: this }, function (event) {\n                var dialog = event.data.dialog;\n                dialog.setOpened(false);\n                if (dialog.isModalEvent(event) && typeof dialog.options.onhide === 'function') {\n                    var hideIt = dialog.options.onhide(dialog);\n                    if (hideIt === false) {\n                        dialog.setOpened(true);\n                    }\n\n                    return hideIt;\n                }\n            });\n            this.getModal().on('hidden.bs.modal', { dialog: this }, function (event) {\n                var dialog = event.data.dialog;\n                dialog.isModalEvent(event) && typeof dialog.options.onhidden === 'function' && dialog.options.onhidden(dialog);\n                if (dialog.isAutodestroy()) {\n                    dialog.setRealized(false);\n                    delete BootstrapDialog.dialogs[dialog.getId()];\n                    $(this).remove();\n                }\n                BootstrapDialog.moveFocus();\n                if ($('.modal').hasClass('in')) {\n                    $('body').addClass('modal-open');\n                }\n            });\n\n            // ESC key support\n            this.getModal().on('keyup', { dialog: this }, function (event) {\n                event.which === 27 && event.data.dialog.isClosable() && event.data.dialog.canCloseByKeyboard() && event.data.dialog.close();\n            });\n\n            // Button hotkey\n            this.getModal().on('keyup', { dialog: this }, function (event) {\n                var dialog = event.data.dialog;\n                if (typeof dialog.registeredButtonHotkeys[event.which] !== 'undefined') {\n                    var $button = $(dialog.registeredButtonHotkeys[event.which]);\n                    !$button.prop('disabled') && !$button.is(':focus') && $button.focus().trigger('click');\n                }\n            });\n\n            return this;\n        },\n        isModalEvent: function (event) {\n            return typeof event.namespace !== 'undefined' && event.namespace === 'bs.modal';\n        },\n        makeModalDraggable: function () {\n            if (this.options.draggable) {\n                this.getModalHeader().addClass(this.getNamespace('draggable')).on('mousedown', { dialog: this }, function (event) {\n                    var dialog = event.data.dialog;\n                    dialog.draggableData.isMouseDown = true;\n                    var dialogOffset = dialog.getModalDialog().offset();\n                    dialog.draggableData.mouseOffset = {\n                        top: event.clientY - dialogOffset.top,\n                        left: event.clientX - dialogOffset.left\n                    };\n                });\n                this.getModal().on('mouseup mouseleave', { dialog: this }, function (event) {\n                    event.data.dialog.draggableData.isMouseDown = false;\n                });\n                $('body').on('mousemove', { dialog: this }, function (event) {\n                    var dialog = event.data.dialog;\n                    if (!dialog.draggableData.isMouseDown) {\n                        return;\n                    }\n                    dialog.getModalDialog().offset({\n                        top: event.clientY - dialog.draggableData.mouseOffset.top,\n                        left: event.clientX - dialog.draggableData.mouseOffset.left\n                    });\n                });\n            }\n\n            return this;\n        },\n        realize: function () {\n            this.initModalStuff();\n            this.getModal().addClass(BootstrapDialog.NAMESPACE)\n                .addClass(this.getCssClass());\n            this.updateSize();\n            if (this.getDescription()) {\n                this.getModal().attr('aria-describedby', this.getDescription());\n            }\n            //this.getModalFooter().append(this.createFooterContent());\n            this.getModalHeader().append(this.createTitleContent());\n            this.getModalHeader().append(this.createCloseButton());\n            //this.getModalHeader().append(this.createHeaderContent()); //V4 template\n            this.getModalBody().append(this.createBodyContent());\n            this.getModal().data('bs.modal', new BootstrapDialogModal(this.getModalForBootstrapDialogModal(), { //FIXME for BootstrapV4\n                backdrop: (this.isClosable() && this.canCloseByBackdrop()) ? true : 'static',\n                keyboard: this.options.closeByKeyboard,\n                show: false\n            }));\n            this.makeModalDraggable();\n            this.handleModalEvents();\n            this.setRealized(true);\n            this.updateButtons();\n            this.updateType();\n            this.updateTitle();\n            this.updateMessage();\n            this.updateClosable();\n            this.updateAnimate();\n            this.updateSize();\n            this.updateTabindex();\n\n            return this;\n        },\n        open: function () {\n            !this.isRealized() && this.realize();\n            this.getModal().modal('show');\n\n            return this;\n        },\n        close: function () {\n            !this.isRealized() && this.realize();\n            this.getModal().modal('hide');\n\n            return this;\n        }\n    };\n\n    // Add compatible methods.\n    BootstrapDialog.prototype = $.extend(BootstrapDialog.prototype, BootstrapDialog.METHODS_TO_OVERRIDE[BootstrapDialogModal.getModalVersion()]);\n\n    /**\n     * RFC4122 version 4 compliant unique id creator.\n     *\n     * Added by https://github.com/tufanbarisyildirim/\n     *\n     *  @returns {String}\n     */\n    BootstrapDialog.newGuid = function () {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    /* ================================================\n     * For lazy people\n     * ================================================ */\n\n    /**\n     * Shortcut function: show\n     *\n     * @param {type} options\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.show = function (options) {\n        return new BootstrapDialog(options).open();\n    };\n\n    /**\n     * Alert window\n     *\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.alert = function () {\n        var alertOptions = {};\n        var defaultAlertOptions = {\n            type: BootstrapDialog.TYPE_PRIMARY,\n            title: null,\n            message: null,\n            closable: false,\n            draggable: false,\n            buttonLabel: BootstrapDialog.DEFAULT_TEXTS.OK,\n            buttonHotkey: null,\n            callback: null\n        };\n\n        if (typeof arguments[0] === 'object' && arguments[0].constructor === {}.constructor) {\n            alertOptions = $.extend(true, defaultAlertOptions, arguments[0]);\n        } else {\n            alertOptions = $.extend(true, defaultAlertOptions, {\n                message: arguments[0],\n                callback: typeof arguments[1] !== 'undefined' ? arguments[1] : null\n            });\n        }\n\n        var dialog = new BootstrapDialog(alertOptions);\n        dialog.setData('callback', alertOptions.callback);\n        dialog.addButton({\n            label: alertOptions.buttonLabel,\n            hotkey: alertOptions.buttonHotkey,\n            action: function (dialog) {\n                if (typeof dialog.getData('callback') === 'function' && dialog.getData('callback').call(this, true) === false) {\n                    return false;\n                }\n                dialog.setData('btnClicked', true);\n\n                return dialog.close();\n            }\n        });\n        if (typeof dialog.options.onhide === 'function') {\n            dialog.onHide(function (dialog) {\n                var hideIt = true;\n                if (!dialog.getData('btnClicked') && dialog.isClosable() && typeof dialog.getData('callback') === 'function') {\n                    hideIt = dialog.getData('callback')(false);\n                }\n                if (hideIt === false) {\n                    return false;\n                }\n                hideIt = this.onhide(dialog);\n\n                return hideIt;\n            }.bind({\n                onhide: dialog.options.onhide\n            }));\n        } else {\n            dialog.onHide(function (dialog) {\n                var hideIt = true;\n                if (!dialog.getData('btnClicked') && dialog.isClosable() && typeof dialog.getData('callback') === 'function') {\n                    hideIt = dialog.getData('callback')(false);\n                }\n\n                return hideIt;\n            });\n        }\n\n        return dialog.open();\n    };\n\n    /**\n     * Confirm window\n     *\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.confirm = function () {\n        var confirmOptions = {};\n        var defaultConfirmOptions = {\n            type: BootstrapDialog.TYPE_PRIMARY,\n            title: null,\n            message: null,\n            closable: false,\n            draggable: false,\n            btnCancelLabel: BootstrapDialog.DEFAULT_TEXTS.CANCEL,\n            btnCancelClass: null,\n            btnCancelHotkey: null,\n            btnOKLabel: BootstrapDialog.DEFAULT_TEXTS.OK,\n            btnOKClass: null,\n            btnOKHotkey: null,\n            btnsOrder: BootstrapDialog.defaultOptions.btnsOrder,\n            callback: null\n        };\n        if (typeof arguments[0] === 'object' && arguments[0].constructor === {}.constructor) {\n            confirmOptions = $.extend(true, defaultConfirmOptions, arguments[0]);\n        } else {\n            confirmOptions = $.extend(true, defaultConfirmOptions, {\n                message: arguments[0],\n                callback: typeof arguments[1] !== 'undefined' ? arguments[1] : null\n            });\n        }\n        if (confirmOptions.btnOKClass === null) {\n            confirmOptions.btnOKClass = ['btn', confirmOptions.type.split('-')[1]].join('-');\n        }\n\n        var dialog = new BootstrapDialog(confirmOptions);\n        dialog.setData('callback', confirmOptions.callback);\n\n        var buttons = [{\n            label: confirmOptions.btnCancelLabel,\n            cssClass: confirmOptions.btnCancelClass,\n            hotkey: confirmOptions.btnCancelHotkey,\n            action: function (dialog) {\n                if (typeof dialog.getData('callback') === 'function' && dialog.getData('callback').call(this, false) === false) {\n                    return false;\n                }\n\n                return dialog.close();\n            }\n        }, {\n            label: confirmOptions.btnOKLabel,\n            cssClass: confirmOptions.btnOKClass,\n            hotkey: confirmOptions.btnOKHotkey,\n            action: function (dialog) {\n                if (typeof dialog.getData('callback') === 'function' && dialog.getData('callback').call(this, true) === false) {\n                    return false;\n                }\n\n                return dialog.close();\n            }\n        }];\n        if (confirmOptions.btnsOrder === BootstrapDialog.BUTTONS_ORDER_OK_CANCEL) {\n            buttons.reverse();\n        }\n        dialog.addButtons(buttons);\n\n        return dialog.open();\n\n    };\n\n    /**\n     * Warning window\n     *\n     * @param {type} message\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.warning = function (message, callback) {\n        return new BootstrapDialog({\n            type: BootstrapDialog.TYPE_WARNING,\n            message: message\n        }).open();\n    };\n\n    /**\n     * Danger window\n     *\n     * @param {type} message\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.danger = function (message, callback) {\n        return new BootstrapDialog({\n            type: BootstrapDialog.TYPE_DANGER,\n            message: message\n        }).open();\n    };\n\n    /**\n     * Success window\n     *\n     * @param {type} message\n     * @returns the created dialog instance\n     */\n    BootstrapDialog.success = function (message, callback) {\n        return new BootstrapDialog({\n            type: BootstrapDialog.TYPE_SUCCESS,\n            message: message\n        }).open();\n    };\n\n    return BootstrapDialog;\n\n}));\n"]}